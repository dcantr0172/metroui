<Ui xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd" xmlns="http://www.blizzard.com/wow/ui/">
	<Script file="EventAlert_IconOptions.lua" />
	<Frame name="EA_Icon_Options_Frame" hidden="true" parent="EA_Options_Frame" toplevel="true" movable="true" frameStrata="HIGH" enableMouse="true" enableKeyboard="true">
		<Size>
			<AbsDimension x="300" y="470" />
		</Size>
		<Anchors>
			<Anchor relativepoint="RIGHT" point="LEFT" />
		</Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11" />
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="32" />
			</TileSize>
			<EdgeSize>
				<AbsValue val="32" />
			</EdgeSize>
		</Backdrop>
		<Frames>
			<CheckButton name="$parent_LockFrame" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="50" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_LOCKFRAME);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.LockFrame = true;
						else
							EA_Config.LockFrame = false;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_LOCKFRAME);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<Slider name="$parent_IconSize" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent_LockFrame" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="100" y="-10" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_ICONSIZE.."(60)");
						_G[self:GetName().."High"]:SetText(EA_XICON_LARGE);
						_G[self:GetName().."Low"]:SetText(EA_XICON_SMALL);
						self:SetMinMaxValues(30.0,90.0);
						self:SetValueStep(5.0);
					</OnLoad>
					<OnValueChanged>
						EA_Config.IconSize = self:GetValue();
						_G[self:GetName().."Text"]:SetText(EA_XICON_ICONSIZE.."("..EA_Config.IconSize..")");
						EventAlert_Icon_Options_Frame_AdjustTimerFontSize();
						EventAlert_Icon_Options_Frame_PaintAlertFrame();
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER");
						GameTooltip:SetText(EA_TTIP_ICONSIZE);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconXOffset" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconSize" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_HORSPACE.."(100)");
						_G[self:GetName().."High"]:SetText(EA_XICON_MORE);
						_G[self:GetName().."Low"]:SetText(EA_XICON_LESS);
						self:SetMinMaxValues(-200.0,200.0);
						self:SetValueStep(5.0);
					</OnLoad>
					<OnValueChanged>
						EA_Position.xOffset = self:GetValue();
						_G[self:GetName().."Text"]:SetText(EA_XICON_HORSPACE.."("..(EA_Position.xOffset+100)..")");
						EventAlert_Icon_Options_Frame_PaintAlertFrame();
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER");
						GameTooltip:SetText(EA_TTIP_ICONXOFFSET);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconYOffset" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconXOffset" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_VERSPACE.."(0)");
						_G[self:GetName().."High"]:SetText(EA_XICON_MORE);
						_G[self:GetName().."Low"]:SetText(EA_XICON_LESS);
						self:SetMinMaxValues(-200.0,200.0);
						self:SetValueStep(5.0);
					</OnLoad>
					<OnValueChanged>
						EA_Position.yOffset = self:GetValue();
						_G[self:GetName().."Text"]:SetText(EA_XICON_VERSPACE.."("..EA_Position.yOffset..")");
						EventAlert_Icon_Options_Frame_PaintAlertFrame();
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER");
						GameTooltip:SetText(EA_TTIP_ICONYOFFSET);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconRedDebuff" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconYOffset" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_REDDEBUFF.."(50%)");
						_G[self:GetName().."High"]:SetText(EA_XICON_LIGHT);
						_G[self:GetName().."Low"]:SetText(EA_XICON_DEEP);
						self:SetMinMaxValues(-50.0,50.0);
						self:SetValueStep(1.0);
					</OnLoad>
					<OnValueChanged>
						EA_Position.RedDebuff = (self:GetValue() + 50) / 100;
						_G[self:GetName().."Text"]:SetText(EA_XICON_REDDEBUFF.."("..(100 - 100*EA_Position.RedDebuff).."%)");
						EventAlert_Icon_Options_Frame_PaintAlertFrame();
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER");
						GameTooltip:SetText(EA_TTIP_ICONREDDEBUFF);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconGreenDebuff" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconRedDebuff" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_GREENDEBUFF.."(50%)");
						_G[self:GetName().."High"]:SetText(EA_XICON_LIGHT);
						_G[self:GetName().."Low"]:SetText(EA_XICON_DEEP);
						self:SetMinMaxValues(-50.0,50.0);
						self:SetValueStep(1.0);
					</OnLoad>
					<OnValueChanged>
						EA_Position.GreenDebuff = (self:GetValue() + 50) / 100;
						_G[self:GetName().."Text"]:SetText(EA_XICON_GREENDEBUFF.."("..(100 - 100*EA_Position.GreenDebuff).."%)");
						EventAlert_Icon_Options_Frame_PaintAlertFrame();
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER");
						GameTooltip:SetText(EA_TTIP_ICONGREENDEBUFF);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Slider>
			<Slider name="$parent_IconExecution" inherits="OptionsSliderTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconGreenDebuff" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_EXECUTION.."(25%)");
						_G[self:GetName().."High"]:SetText(EA_XICON_EXEFULL);
						_G[self:GetName().."Low"]:SetText(EA_XICON_EXECLOSE);
						self:SetMinMaxValues(0,50.0);
						self:SetValueStep(5.0);
					</OnLoad>
					<OnValueChanged>
						EA_Position.Execution = self:GetValue();
						_G[self:GetName().."Text"]:SetText(EA_XICON_EXECUTION.."("..self:GetValue().."%)");
					</OnValueChanged>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_CENTER");
						GameTooltip:SetText(EA_TTIP_ICONEXECUTION);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Slider>
			<CheckButton name="$parent_PlayerLv2BOSS" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconExecution" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="10" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText("Lv2");
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Position.PlayerLv2BOSS = true;
						else
							EA_Position.PlayerLv2BOSS = false;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_PLAYERLV2BOSS);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>

			<CheckButton name="$parent_SpecFlag_HolyPower" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_IconExecution" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="-40" y="-15" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPECFLAG_HOLYPOWER);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_SpecFlag.HolyPower = true;
						else
							EA_SpecFlag.HolyPower = false;
							if EAFrameSpec_10090 ~= nil then EAFrameSpec_10090:Hide() end;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPECFLAG_HOLYPOWER);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_SpecFlag_RunicPower" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_SpecFlag_HolyPower" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPECFLAG_RUNICPOWER);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_SpecFlag.RunicPower = true;
						else
							EA_SpecFlag.RunicPower = false;
							if EAFrameSpec_10060 ~= nil then EAFrameSpec_10060:Hide() end;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPECFLAG_RUNICPOWER);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_SpecFlag_SoulShards" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_SpecFlag_HolyPower" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPECFLAG_SOULSHARDS);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_SpecFlag.SoulShards = true;
						else
							EA_SpecFlag.SoulShards = false;
							if EAFrameSpec_10070 ~= nil then EAFrameSpec_10070:Hide() end;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPECFLAG_SOULSHARDS);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_SpecFlag_Eclipse" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_SpecFlag_SoulShards" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPECFLAG_ECLIPSE);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_SpecFlag.Eclipse = true;
						else
							EA_SpecFlag.Eclipse = false;
							if EAFrameSpec_10081 ~= nil then EAFrameSpec_10081:Hide() end;
							if EAFrameSpec_10082 ~= nil then EAFrameSpec_10082:Hide() end;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPECFLAG_ECLIPSE);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_SpecFlag_ComboPoint" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_SpecFlag_SoulShards" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPECFLAG_COMBOPOINT);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_SpecFlag.ComboPoint = true;
						else
							EA_SpecFlag.ComboPoint = false;
							if EAFrameSpec_10000 ~= nil then EAFrameSpec_10000:Hide() end;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPECFLAG_COMBOPOINT);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_SpecFlag_Lifebloom" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_SpecFlag_ComboPoint" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="100" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPECFLAG_LIFEBLOOM);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_SpecFlag.Lifebloom = true;
						else
							EA_SpecFlag.Lifebloom = false;
							if EAFrameSpec_33763 ~= nil then EAFrameSpec_33763:Hide() end;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPECFLAG_LIFEBLOOM);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>


			<Button name="$parent_ToggleAlertFrame" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="175" y="21" />
				</Size>
				<Anchors>
					<Anchor point="CENTER" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="50" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_TOGGLE_ALERTFRAME);
					</OnLoad>
					<OnClick>
						PlaySound("gsTitleOptionOK");
						EventAlert_Icon_Options_Frame_ToggleAlertFrame();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parent_ResetAlertPosition" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="150" y="21" />
				</Size>
				<Anchors>
					<Anchor point="CENTER" relativeTo="$parent_ToggleAlertFrame" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="-13" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XICON_RESET_FRAMEPOS);
					</OnLoad>
					<OnClick>
						PlaySound("gsTitleOptionOK");
						EventAlert_Icon_Options_Frame_ResetFrame();
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
		<Layers>
			<Layer>
				<Texture name="$parent_Header" file="Interface\DialogFrame\UI-DialogBox-Header">
					<Size>
						<AbsDimension x="400" y="64" />
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="12" />
							</Offset>
						</Anchor>
					</Anchors>
				</Texture>
				<FontString inherits="GameFontNormal" text="Icon Position Options">
					<Anchors>
						<Anchor point="TOP" relativeTo="$parent_Header">
							<Offset>
								<AbsDimension x="0" y="-14" />
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:RegisterForDrag("LeftButton");
				EventAlert_Icon_Options_Frame_OnLoad();
			</OnLoad>
			<OnMouseDown>
				EventAlert_Icon_Options_Frame_MouseDown(button);
			</OnMouseDown>
			<OnMouseUp>
				EventAlert_Icon_Options_Frame_MouseUp(button);
			</OnMouseUp>
		</Scripts>
	</Frame>
</Ui>