<Ui xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd" xmlns="http://www.blizzard.com/wow/ui/">
	<Script file="EventAlert_Options.lua" />
	<Frame name="EA_Options_Frame" hidden="true" parent="UIParent" toplevel="true" movable="true" frameStrata="HIGH" enableMouse="true" enableKeyboard="true">
		<Size>
			<AbsDimension x="300" y="470" />
		</Size>
		<Anchors>
			<Anchor point="CENTER" />
		</Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11" />
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="32" />
			</TileSize>
			<EdgeSize>
				<AbsValue val="32" />
			</EdgeSize>
		</Backdrop>
		<Frames>
			<Button name="$parent_ToggleIconOptions" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="180" y="21" />
				</Size>
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent">
						<Offset>
							<AbsDimension x="0" y="-40" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_ICONPOSOPT);
					</OnLoad>
					<OnClick>
						PlaySound("gsTitleOptionOK");
						EventAlert_Options_ToggleIconOptionsFrame();
					</OnClick>
				</Scripts>
			</Button>
			<CheckButton name="$parent_ShowFrame" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent">
						<Offset>
							<AbsDimension x="50" y="-70" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_ALTFRAME);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.ShowFrame = true;
						else
							EA_Config.ShowFrame = false;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SHOWFRAME);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_ShowName" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_ShowFrame" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_BUFFNAME);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.ShowName = true;
						else
							EA_Config.ShowName = false;
						end
						EventAlert_Icon_Options_Frame_PaintAlertFrame();
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SHOWNAME);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_ShowTimer" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_ShowName" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_TIMER);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.ShowTimer = true;
						else
							EA_Config.ShowTimer = false;
						end
						EventAlert_Icon_Options_Frame_PaintAlertFrame();
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SHOWTIMER);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_ChangeTimer" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_ShowTimer" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="20" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_OMNICC);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.ChangeTimer = true;
						else
							EA_Config.ChangeTimer = false;
						end
						EventAlert_Icon_Options_Frame_AdjustTimerFontSize();
						EventAlert_Icon_Options_Frame_PaintAlertFrame();
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_CHANGETIMER);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_ShowFlash" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_ShowTimer" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_FULLFLASH);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.ShowFlash = true;
						else
							EA_Config.ShowFlash = false;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SHOWFLASH);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_DoAlertSound" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_ShowFlash" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_PLAY_SOUNDALERT);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.DoAlertSound = true;
						else
							EA_Config.DoAlertSound = false;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_DOALERTSOUND);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_AlertSoundSelect" inherits="UIDropDownMenuTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_DoAlertSound" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="10" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						EventAlert_Options_AlertSoundSelect_OnLoad();
					</OnLoad>
					<OnShow>
						EventAlert_Options_AlertSoundSelect_OnLoad();
					</OnShow>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_ALERTSOUNDSELECT);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_AllowESC" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_DoAlertSound" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-30" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_ESC_CLOSEALERT);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.AllowESC = true;
						else
							EA_Config.AllowESC = false;
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_ALLOWESC);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_AltAlerts" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_AllowESC" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_ALTERALERT);
					</OnLoad>
					<OnClick>
						if (self:GetChecked()) then
							EA_Config.AllowAltAlerts = true;
							if (EA_Class_Events_Frame:IsVisible()) then
								EA_ClassAlt_Events_Frame:Show();
							end
						 else
							EA_Config.AllowAltAlerts = false;
							EA_ClassAlt_Events_Frame:Hide();
						end
					</OnClick>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_ALTALERTS);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<Button name="$parent_ToggleClassEvents" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="180" y="21" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_AltAlerts" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="10" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_CLASSALERT);
					</OnLoad>
					<OnClick>
						PlaySound("gsTitleOptionOK");
						EventAlert_Options_ToggleClassEventsFrame();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parent_ToggleOtherEvents" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="180" y="21" />
				</Size>
				<Anchors>
					<Anchor point="BOTTOM" relativeTo="$parent_ToggleClassEvents" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="-25" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_OTHERALERT);
					</OnLoad>
					<OnClick>
						PlaySound("gsTitleOptionOK");
						EventAlert_Options_ToggleOtherEventsFrame();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parent_ToggleTargetEvents" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="180" y="21" />
				</Size>
				<Anchors>
					<Anchor point="BOTTOM" relativeTo="$parent_ToggleOtherEvents" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="-25" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_TARGETALERT);
					</OnLoad>
					<OnClick>
						PlaySound("gsTitleOptionOK");
						EventAlert_Options_ToggleTargetEventsFrame();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parent_ToggleSCDEvents" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="180" y="21" />
				</Size>
				<Anchors>
					<Anchor point="BOTTOM" relativeTo="$parent_ToggleTargetEvents" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="-25" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SHOW_SCDALERT);
					</OnLoad>
					<OnClick>
						PlaySound("gsTitleOptionOK");
						EventAlert_Options_ToggleSCDEventsFrame();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parent_Okay" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="75" y="21" />
				</Size>
				<Anchors>
					<Anchor point="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="-15" y="16" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_OKAY);
					</OnLoad>
					<OnClick>
						PlaySound("gsTitleOptionOK");
						HideUIPanel(EA_Options_Frame);
						EventAlert_Options_CloseAnchorFrames();
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parent_VerBtn1" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="75" y="21" />
				</Size>
				<Anchors>
					<Anchor point="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="15" y="16" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_VERBTN1);
					</OnLoad>
					<OnClick>
						EventAlert_ShowVerURL(1);
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parent_VerBtn2" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="75" y="21" />
				</Size>
				<Anchors>
					<Anchor point="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="90" y="16" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_VERBTN2);
					</OnLoad>
					<OnClick>
						EventAlert_ShowVerURL(2);
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
		<Layers>
			<Layer>
				<Texture name="$parent_Header" file="Interface\DialogFrame\UI-DialogBox-Header">
					<Size>
						<AbsDimension x="350" y="64" />
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="12" />
							</Offset>
						</Anchor>
					</Anchors>
				</Texture>
				<FontString name="$parent_Header_Text" inherits="GameFontNormal" text="">
					<Anchors>
						<Anchor point="TOP" relativeTo="$parent_Header">
							<Offset>
								<AbsDimension x="0" y="-14" />
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parent_VerUrlText" inherits="GameFontNormal" text="">
					<Anchors>
						<Anchor point="BOTTOM" relativeTo="$parent">
							<Offset>
								<AbsDimension x="-80" y="40" />
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
				<FontString name="$parent_VersionText" inherits="GameFontNormal" text="">
					<Anchors>
						<Anchor point="BOTTOM" relativeTo="$parent">
							<Offset>
								<AbsDimension x="100" y="40" />
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:RegisterForDrag("LeftButton");
				EventAlert_Options_OnLoad();
			</OnLoad>
			<OnHide>
				EventAlert_Options_CloseAnchorFrames();
			</OnHide>
			<OnMouseDown>
				EventAlert_Options_MouseDown(button);
			</OnMouseDown>
			<OnMouseUp>
				EventAlert_Options_MouseUp(button);
			</OnMouseUp>
		</Scripts>
	</Frame>

	<Frame name="EA_SpellCondition_Frame" hidden="true" parent="EA_Options_Frame" frameStrata="DIALOG">
		<Size>
			<AbsDimension x="300" y="275" />
		</Size>
		<!-- <Anchors>
			<Anchor relativepoint="CENTER" point="CENTER" />
		</Anchors> -->
		<Backdrop bgFile="Interface\AddOns\EventAlertMod\Images\UI-Panel-Backdrop" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11" />
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="32" />
			</TileSize>
			<EdgeSize>
				<AbsValue val="32" />
			</EdgeSize>
		</Backdrop>
		<Frames>
			<Frame name="$parent_SpellIcon">
				<Size>
					<AbsDimension x="50" y="50" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset x="25" y="-35" />
					</Anchor>
				</Anchors>
			</Frame>
			<Button name="$parent_SpellNameText" inherits="OptionsButtonTemplate" text="">
				<Size>
					<AbsDimension x="150" y="21" />
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parent_SpellIcon" relativepoint="RIGHT" >
						<Offset>
							<AbsDimension x="10" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture file=""/>
				<HighlightTexture file=""/>
				<PushedTexture file=""/>
				<Scripts>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Button>
			<CheckButton name="$parent_Stack" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent">
						<Offset>
							<AbsDimension x="20" y="-110" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPELLCOND_STACK);
					</OnLoad>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPELLCOND_STACK);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<EditBox name="$parent_StackEditBox" letters="1" multiLine="false" numeric="true" ignoreArrows="false" autoFocus="false">
				<Size>
					<AbsDimension x="25" y="25" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_Stack" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="210" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Left">
							<Size>
								<AbsDimension x="20" y="25"></AbsDimension>
							</Size>
							<Anchors>
								<Anchor point="LEFT">
									<Offset>
										<AbsDimension x="-5" y="0"></AbsDimension>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0" right="0.2" top="0" bottom="1.0"></TexCoords>
						</Texture>
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Right">
							<Size>
								<AbsDimension x="20" y="25"></AbsDimension>
							</Size>
							<Anchors>
								<Anchor point="RIGHT">
									<Offset>
										<AbsDimension x="-8" y="0"></AbsDimension>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0.7" right="1.0" top="0" bottom="1.0"></TexCoords>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnEscapePressed>
						self:ClearFocus();
					</OnEscapePressed>
				</Scripts>
				<FontString inherits="ChatFontNormal" />
			</EditBox>
			<CheckButton name="$parent_Self" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_Stack" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPELLCOND_SELF);
					</OnLoad>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPELLCOND_SELF);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<CheckButton name="$parent_OverGrow" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_Self" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPELLCOND_OVERGROW);
					</OnLoad>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPELLCOND_OVERGROW);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<EditBox name="$parent_OverGrowEditBox" letters="1" multiLine="false" numeric="true" ignoreArrows="false" autoFocus="false">
				<Size>
					<AbsDimension x="25" y="25" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_OverGrow" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="210" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Left">
							<Size>
								<AbsDimension x="20" y="25"></AbsDimension>
							</Size>
							<Anchors>
								<Anchor point="LEFT">
									<Offset>
										<AbsDimension x="-5" y="0"></AbsDimension>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0" right="0.2" top="0" bottom="1.0"></TexCoords>
						</Texture>
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Right">
							<Size>
								<AbsDimension x="20" y="25"></AbsDimension>
							</Size>
							<Anchors>
								<Anchor point="RIGHT">
									<Offset>
										<AbsDimension x="-8" y="0"></AbsDimension>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0.7" right="1.0" top="0" bottom="1.0"></TexCoords>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnEscapePressed>
						self:ClearFocus();
					</OnEscapePressed>
				</Scripts>
				<FontString inherits="ChatFontNormal" />
			</EditBox>
			<CheckButton name="$parent_RedSecText" inherits="OptionsCheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_OverGrow" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="0" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SPELLCOND_REDSECTEXT);
					</OnLoad>
					<OnEnter>
						GameTooltip:SetOwner(self, "ANCHOR_RIGHT");
						GameTooltip:SetText(EA_TTIP_SPELLCOND_REDSECTEXT);
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			<EditBox name="$parent_RedSecTextEditBox" letters="2" multiLine="false" numeric="true" ignoreArrows="false" autoFocus="false">
				<Size>
					<AbsDimension x="25" y="25" />
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parent_RedSecText" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="210" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Left">
							<Size>
								<AbsDimension x="20" y="25"></AbsDimension>
							</Size>
							<Anchors>
								<Anchor point="LEFT">
									<Offset>
										<AbsDimension x="-5" y="0"></AbsDimension>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0" right="0.2" top="0" bottom="1.0"></TexCoords>
						</Texture>
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Right">
							<Size>
								<AbsDimension x="20" y="25"></AbsDimension>
							</Size>
							<Anchors>
								<Anchor point="RIGHT">
									<Offset>
										<AbsDimension x="0" y="0"></AbsDimension>
									</Offset>
								</Anchor>
							</Anchors>
							<TexCoords left="0.7" right="1.0" top="0" bottom="1.0"></TexCoords>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnEscapePressed>
						self:ClearFocus();
					</OnEscapePressed>
				</Scripts>
				<FontString inherits="ChatFontNormal" />
			</EditBox>

			<Button name="$parent_Cancel" inherits="OptionsButtonTemplate" text="Cancel">
				<Size>
					<AbsDimension x="75" y="21" />
				</Size>
				<Anchors>
					<Anchor relativepoint="BOTTOM" point="CENTER">
						<Offset>
							<AbsDimension x="50" y="35" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_OKAY);
					</OnLoad>
					<OnClick>
						HideUIPanel(EA_SpellCondition_Frame);
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parent_Save" inherits="OptionsButtonTemplate" text="Save">
				<Size>
					<AbsDimension x="75" y="21" />
				</Size>
				<Anchors>
					<Anchor relativepoint="BOTTOM" point="CENTER">
						<Offset>
							<AbsDimension x="-50" y="35" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Text"]:SetText(EA_XOPT_SAVE);
					</OnLoad>
				</Scripts>
			</Button>
		</Frames>
		<Layers>
			<Layer>
				<Texture name="$parent_Header" file="Interface\DialogFrame\UI-DialogBox-Header">
					<Size>
						<AbsDimension x="400" y="64" />
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="12" />
							</Offset>
						</Anchor>
					</Anchors>
				</Texture>
				<FontString name="$parent_HeaderText" inherits="GameFontNormal" text="Spell Conditions">
					<Anchors>
						<Anchor point="TOP" relativeTo="$parent_Header">
							<Offset>
								<AbsDimension x="0" y="-14" />
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnMouseDown>
				-- if button == "LeftButton" then
				--     self:StartMoving();
				-- end
			</OnMouseDown>
			<OnMouseUp>
				-- if button == "LeftButton" then
				--     self:StopMovingOrSizing();
				-- end
			</OnMouseUp>
		</Scripts>
	</Frame>
</Ui>